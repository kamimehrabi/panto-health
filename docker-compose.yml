services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: panto-health-app
    ports:
      - '3000:3000'
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: panto-health-rabbitmq
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    # ADDED: Healthcheck to ensure RabbitMQ is ready before other services connect
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  mongo:
    image: mongo:latest
    container_name: panto-health-mongo
    restart: always
    ports:
      - "27017:27017"
    # ADDED: Healthcheck for the mongo service to ensure it's ready
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - mongo-data:/data/db
    env_file:
      - .env

volumes:
  mongo-data:
  rabbitmq-data: